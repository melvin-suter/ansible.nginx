user {{ nginx_user }};
worker_processes auto;
error_log {{ nginx_error_log }};
pid {{ nginx_pid }};

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;


events {
    worker_connections 1024;
    use epoll;
}

http {
    ###################
    # Default Settings
    ###################
    # nginx-more settings
    server_names_hash_max_size 2048;
    server_tokens off;
    vhost_traffic_status_zone;
    disable_symlinks if_not_owner;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    variables_hash_max_size 1024;
    variables_hash_bucket_size 128;
    keepalive_requests 150;
    keepalive_timeout 15;

    # Brotli Compression
    brotli on;
    brotli_static on;
    brotli_buffers 16 8k;
    brotli_comp_level 6;
    brotli_types
            text/css
            text/javascript
            text/xml
            text/plain
            text/x-component
            application/javascript
            application/x-javascript
            application/json
            application/xml
            application/rss+xml
            application/vnd.ms-fontobject
            font/truetype
            font/opentype
            image/svg+xml;

    # nginx-more caching

    # proxy_cache_path /var/lib/nginx/cache/proxy levels=1:2 keys_zone=PROXYCACHE:100m max_size=200m inactive=60m;
    # proxy_temp_path /var/lib/nginx/cache/proxy_tmp;
    # proxy_connect_timeout 30;
    # proxy_read_timeout 300;
    # proxy_send_timeout 300;
    # proxy_buffers 16 32k;
    # proxy_buffering on;
    # proxy_buffer_size 64k;
    # proxy_busy_buffers_size 96k;
    # proxy_temp_file_write_size 96k;
    # proxy_cache_key "$scheme://$host$request_uri";

    # fastcgi_cache_path /var/lib/nginx/cache/fastcgi levels=1:2 keys_zone=FCGICACHE:100m max_size=200m inactive=60m;
    # fastcgi_temp_path /var/lib/nginx/cache/fastcgi_tmp;
    # fastcgi_cache_key "$scheme$request_method$host$request_uri";
    # fastcgi_cache_use_stale error timeout invalid_header http_500;
    # fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
    # fastcgi_send_timeout 300;
    # fastcgi_read_timeout 300;
    # fastcgi_buffers 8 256k;
    # fastcgi_buffer_size 256k;
    # fastcgi_busy_buffers_size 256k;
    # fastcgi_index index.php;
    # include fastcgi_params;
    # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;


    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  {{ nginx_access_log }}  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    
    ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:2m;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;


{% if nginc_geoip %}
    ###################
    #   Geo IP Maps
    ###################

    geoip2 {{ nginx_geoip_mmdb }} {
        auto_reload 60m;
        $geoip2_metadata_country_build metadata build_epoch;
        $geoip2_data_country_code country iso_code;
    }

    {% for geomap in nginx_geoip_maps %}
        {%- if geomap.type == "allow" -%}

    map $geoip2_data_country_code ${{ geomap.name }} {
        default no;

            {%- for country in geomap.countries -%}
        {{ country }} yes;
            {% endfor %}
    }
        {% else %}

    map $geoip2_data_country_code $geoipmap_{{ geomap.name }} {
        default yes;

            {%- for country in geomap.countries -%}
        {{ country }} no;
            {% endfor %}
    }
        {% endif %}
    {% endfor %}

    geo $lan {
        default no;

    {% for item in nginx_geoip_allow %}
        {{ item }} yes;
    {% endfor %}
    }
{% endif %}


{%- if nginx_global_http_redirect -%}
    ###################
    # Default redirect
    ###################

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }
{% endif %}


    ###################
    #     Configs
    ###################
    include {{ nginx_config_dir }}/_base/*.conf;
    include {{ nginx_config_dir }}/*.conf;

}

